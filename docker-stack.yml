version: '3.7'
services:
# An nginx/LetsEncrypt reverse proxy for handling SSL offloading and traffic routing
  swag:
    image: ghcr.io/linuxserver/swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=mod.gg
      - SUBDOMAINS=portainer,www,repl,stats,db,webhook,logs,modmail,beta
      - VALIDATION=http
      - EMAIL=certs@cisien.com
      - ONLY_SUBDOMAINS=false
      - STAGING=false
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.5'
          memory: 20M
    volumes:
      - swag-config:/config
    ports:
      - 443:443
      - 80:80
    networks:
      - proxy
      - portainer_agent_network

# c# repl service
  repl:
    image: ghcr.io/discord-csharp/csharprepl:latest
    read_only: true
    user: www-data
    environment:
      - ASPNETCORE_URLS=http://+:31337
      - Logging__LogLevel__Microsoft=Warning
      - Logging__LogLevel__CSDiscordService=Trace
    deploy:
      replicas: 5
      mode: replicated
      update_config:
        parallelism: 2
        delay: 0s
        order: start-first
      restart_policy:
        condition: any
        delay: 0s
      resources:
        limits:
          cpus: '1'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 20M
    volumes:
      - repl-tmp:/tmp
      - repl-var:/var
    networks:
      - repl

# the modix bot
  modix:
    image: ghcr.io/discord-csharp/modix:main
    environment:
      COREHOST_TRACE: '0'
      MessageCacheSize: '1000'
      MODIX_DiscordClientId: '550841992809152542'
      MODIX_LogWebhookId: '382609729802862592'
      MODIX_ReplUrl: http://repl:31337/eval
      MODIX_IlUrl: http://repl:31337/il
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        delay: 0s
        order: stop-first
      restart_policy:
        condition: any
        delay: 0s
    secrets:
      - source: discord-bot-token
        target: DiscordToken
      - source: discord-client-secret
        target: DiscordClientSecret
      - source: db-connection-string
        target: DbConnection
      - source: log-webhook-token
        target: LogWebhookToken
    volumes:
      - modix-keys:/app/dataprotection
      - modix-logs:/app/logs
    networks:
      - proxy
      - repl
      - modix

# the translation feature of the modix bot
  modix-translator:
    image: ghcr.io/discord-csharp/modix-translator:latest
    environment:
      COREHOST_TRACE: '0'
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        delay: 0s
        order: stop-first
      restart_policy:
        condition: any
        delay: 0s
    secrets:
      - source: discord-bot-token
        target: DISCORDTOKEN
      - source: azure-translation-service-key-a
        target: AZURETRANSLATIONKEY

# pgadmin instance with access to the modix instance
  db-admin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=cisien@cisien.com
      - PGADMIN_DEFAULT_PASSWORD=CHANGEME
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 0s
        order: stop-first
      restart_policy:
        condition: any
        delay: 0s
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - proxy

# grafana instance with access to the modix database
  stats:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_ROOT_URL=https://stats.mod.gg
      - GF_SECURITY_ADMIN_PASSWORD=CHANGEME
      - GF_PATHS_CONFIG=/gfdata/grafana.ini
      - GF_PATHS_DATA=/gfdata/data
      - GF_PATHS_PROVISIONING=/gfdata/provisioning
      - GF_DATABASE_TYPE=sqlite3
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 0s
        order: stop-first
      restart_policy:
        condition: any
        delay: 0s
    volumes:
      - grafana-data:/gfdata:rw
    networks:
      - proxy

# monitors the health check (specifically of REPL) and restarts the container
  autoheal:
    image: willfarrell/autoheal
    deploy:
      mode: global
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  proxy:
  repl:
  modix:
  modix-20:
  portainer_agent_network:
    external:
      name: portainer_agent_network
secrets:
  discord-bot-token:
    external: true
  discord-client-secret:
    external: true
  stackoverflow-token:
    external: true
  db-connection-string:
    external: true
  log-webhook-token:
    external: true
  azure-translation-service-key-a:
    external: true
  modix-dev-token:
    external: true
  modix-20-bot-token:
    external: true
  modix-20-discord-clientsecret:
    external: true
  modix-20-db-connection-string-b:
    external: true
  modix-20-web-token-signing-secret:
    external: true

volumes:
  pgadmin-data:
  grafana-data:
  swag-config:
  hastebin-data:
  modix-keys:
  modix-logs:
  modix-20-keys:

  #workaround for swarm not supporting tmpfs mounts
  repl-tmp:
    driver_opts:
      type: tmpfs
      device: tmpfs
  repl-var:
    driver_opts:
      type: tmpfs
      device: tmpfs